using System.Linq;
using System.Runtime.InteropServices.ComTypes;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using pentest_challenge.Contracts;
using pentest_challenge.Helpers;
using pentest_challenge.Models;

namespace pentest_challenge.Controllers
{
    public class LoginController : BaseController
    {
        private readonly ITokenStorage _storage;
        
        public LoginController(ITokenStorage storage, ITokenValidator tokenValidator) : base(tokenValidator)
        {
            _storage = storage;
        }
        
        [HttpGet("/login")]
        public IActionResult Login()
        {
            CheckForLoggedIn();
            return View();
        }

        [HttpPost("/login")]
        [ValidateAntiForgeryToken]
        public IActionResult VerifyLogin()
        {
            var user = Request.Form["user"];
            
            var token = TokenGenerator.Generate();

            _storage.Store(token, user, false);

            var cookieOptions = new CookieOptions()
            {
                IsEssential = true,
                Secure = true
            };
            
            Response.Cookies.Append(TokenInformation.CookieTokenKey, token, cookieOptions);

            ViewData["IsLoggedIn"] = true;
            return View();
        }

        public IActionResult Logout()
        {
            _storage.Invalidate(UserToken.Token);
            return LocalRedirect("/");
        }
    }
}