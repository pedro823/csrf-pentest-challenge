using System;
using pentest_challenge.Contracts;

namespace pentest_challenge.Helpers
{
    public class TokenValidator : ITokenValidator
    {
        private readonly ITokenStorage _storage;
        private const string AdminToken = "6FH7U5Rb5mGfjsNPU89wimo3THze6vPq6EOXQ7xBtv12YByTbMi96vGqq_2v28VlUjmkVYsHPm8PqU28ebK6kA"; 
        private static TokenResult AdminResult = new TokenResult(true, "God", AdminToken, true);
        private static TokenResult NullResult = new TokenResult(false, null, null, false);

        public TokenValidator(ITokenStorage storage)
        {
            _storage = storage;
        }

        public TokenResult Validate(string token)
        {
            if (string.Equals(token, AdminToken, StringComparison.Ordinal))
            {
                return AdminResult;
            }

            if (token == null)
            {
                return NullResult;
            }
            
            var info = _storage.Check(token);
            
            return new TokenResult(info != null, info?.User, token, info?.IsAdmin ?? false);
        }
    }
}